<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0721.1350                               -->
<workbook original-version='18.1' source-build='2020.2.4 (20202.20.0721.1350)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='All Data (set8)' inline='true' name='federated.0edvvqa0ap074u1eynk511801dx0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='set8' name='excel-direct.03edfvs1ladc9h1fpb4tl0zy7v5w'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/zachary/Projects/csci-426-group-project/set-8/set8.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.03edfvs1ladc9h1fpb4tl0zy7v5w' name='All Data' table='[&apos;All Data$&apos;]' type='table'>
          <columns gridOrigin='A1:J50:no:A1:J50:0' header='yes' outcome='6'>
            <column datatype='date' name='Week' ordinal='0' />
            <column datatype='real' name='Bitcoin Search Interest' ordinal='1' />
            <column datatype='real' name='Bitcoin Volume' ordinal='2' />
            <column datatype='real' name='Bitcoin Price' ordinal='3' />
            <column datatype='real' name='Ether Search Interest' ordinal='4' />
            <column datatype='real' name='Ether Volume' ordinal='5' />
            <column datatype='real' name='Ether Price' ordinal='6' />
            <column datatype='real' name='Dogecoin Search Interest' ordinal='7' />
            <column datatype='real' name='Dogecoin Volume' ordinal='8' />
            <column datatype='real' name='Dogecoin Price' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.03edfvs1ladc9h1fpb4tl0zy7v5w' name='All Data' table='[&apos;All Data$&apos;]' type='table'>
          <columns gridOrigin='A1:J50:no:A1:J50:0' header='yes' outcome='6'>
            <column datatype='date' name='Week' ordinal='0' />
            <column datatype='real' name='Bitcoin Search Interest' ordinal='1' />
            <column datatype='real' name='Bitcoin Volume' ordinal='2' />
            <column datatype='real' name='Bitcoin Price' ordinal='3' />
            <column datatype='real' name='Ether Search Interest' ordinal='4' />
            <column datatype='real' name='Ether Volume' ordinal='5' />
            <column datatype='real' name='Ether Price' ordinal='6' />
            <column datatype='real' name='Dogecoin Search Interest' ordinal='7' />
            <column datatype='real' name='Dogecoin Volume' ordinal='8' />
            <column datatype='real' name='Dogecoin Price' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[All Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J50:no:A1:J50:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Week</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Week]</local-name>
            <parent-name>[All Data]</parent-name>
            <remote-alias>Week</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All Data_712F2D21377F4D8996324B4C6172AD5C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bitcoin Search Interest</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Bitcoin Search Interest]</local-name>
            <parent-name>[All Data]</parent-name>
            <remote-alias>Bitcoin Search Interest</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All Data_712F2D21377F4D8996324B4C6172AD5C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bitcoin Volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Bitcoin Volume]</local-name>
            <parent-name>[All Data]</parent-name>
            <remote-alias>Bitcoin Volume</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All Data_712F2D21377F4D8996324B4C6172AD5C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bitcoin Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Bitcoin Price]</local-name>
            <parent-name>[All Data]</parent-name>
            <remote-alias>Bitcoin Price</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All Data_712F2D21377F4D8996324B4C6172AD5C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ether Search Interest</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Ether Search Interest]</local-name>
            <parent-name>[All Data]</parent-name>
            <remote-alias>Ether Search Interest</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All Data_712F2D21377F4D8996324B4C6172AD5C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ether Volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Ether Volume]</local-name>
            <parent-name>[All Data]</parent-name>
            <remote-alias>Ether Volume</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All Data_712F2D21377F4D8996324B4C6172AD5C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ether Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Ether Price]</local-name>
            <parent-name>[All Data]</parent-name>
            <remote-alias>Ether Price</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All Data_712F2D21377F4D8996324B4C6172AD5C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dogecoin Search Interest</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dogecoin Search Interest]</local-name>
            <parent-name>[All Data]</parent-name>
            <remote-alias>Dogecoin Search Interest</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All Data_712F2D21377F4D8996324B4C6172AD5C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dogecoin Volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dogecoin Volume]</local-name>
            <parent-name>[All Data]</parent-name>
            <remote-alias>Dogecoin Volume</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All Data_712F2D21377F4D8996324B4C6172AD5C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dogecoin Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dogecoin Price]</local-name>
            <parent-name>[All Data]</parent-name>
            <remote-alias>Dogecoin Price</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All Data_712F2D21377F4D8996324B4C6172AD5C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Bitcoin Price]' role='measure' type='quantitative' />
      <column datatype='real' name='[Bitcoin Search Interest]' role='measure' type='quantitative' />
      <column datatype='real' name='[Dogecoin Price]' role='measure' type='quantitative' />
      <column datatype='real' name='[Dogecoin Search Interest]' role='measure' type='quantitative' />
      <column datatype='real' name='[Ether Price]' role='measure' type='quantitative' />
      <column datatype='real' name='[Ether Search Interest]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='All Data' datatype='table' name='[__tableau_internal_object_id__].[All Data_712F2D21377F4D8996324B4C6172AD5C]' role='measure' type='quantitative' />
      <column-instance column='[Bitcoin Price]' derivation='Avg' name='[avg:Bitcoin Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Bitcoin Search Interest]' derivation='Avg' name='[avg:Bitcoin Search Interest:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Dogecoin Price]' derivation='Avg' name='[avg:Dogecoin Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Dogecoin Search Interest]' derivation='Avg' name='[avg:Dogecoin Search Interest:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ether Price]' derivation='Avg' name='[avg:Ether Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ether Search Interest]' derivation='Avg' name='[avg:Ether Search Interest:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Bitcoin Price]' derivation='Sum' name='[sum:Bitcoin Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Bitcoin Search Interest]' derivation='Sum' name='[sum:Bitcoin Search Interest:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Dogecoin Price]' derivation='Sum' name='[sum:Dogecoin Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Dogecoin Search Interest]' derivation='Sum' name='[sum:Dogecoin Search Interest:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ether Price]' derivation='Sum' name='[sum:Ether Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ether Search Interest]' derivation='Sum' name='[sum:Ether Search Interest:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0edvvqa0ap074u1eynk511801dx0].[avg:Bitcoin Price:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0edvvqa0ap074u1eynk511801dx0].[sum:Bitcoin Price:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0edvvqa0ap074u1eynk511801dx0].[sum:Dogecoin Search Interest:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0edvvqa0ap074u1eynk511801dx0].[avg:Dogecoin Price:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0edvvqa0ap074u1eynk511801dx0].[sum:Dogecoin Price:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0edvvqa0ap074u1eynk511801dx0].[avg:Ether Search Interest:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0edvvqa0ap074u1eynk511801dx0].[sum:Ether Search Interest:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0edvvqa0ap074u1eynk511801dx0].[avg:Dogecoin Search Interest:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0edvvqa0ap074u1eynk511801dx0].[avg:Ether Price:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0edvvqa0ap074u1eynk511801dx0].[sum:Ether Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0edvvqa0ap074u1eynk511801dx0].[avg:Bitcoin Search Interest:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0edvvqa0ap074u1eynk511801dx0].[sum:Bitcoin Search Interest:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='All Data' id='All Data_712F2D21377F4D8996324B4C6172AD5C'>
            <properties context=''>
              <relation connection='excel-direct.03edfvs1ladc9h1fpb4tl0zy7v5w' name='All Data' table='[&apos;All Data$&apos;]' type='table'>
                <columns gridOrigin='A1:J50:no:A1:J50:0' header='yes' outcome='6'>
                  <column datatype='date' name='Week' ordinal='0' />
                  <column datatype='real' name='Bitcoin Search Interest' ordinal='1' />
                  <column datatype='real' name='Bitcoin Volume' ordinal='2' />
                  <column datatype='real' name='Bitcoin Price' ordinal='3' />
                  <column datatype='real' name='Ether Search Interest' ordinal='4' />
                  <column datatype='real' name='Ether Volume' ordinal='5' />
                  <column datatype='real' name='Ether Price' ordinal='6' />
                  <column datatype='real' name='Dogecoin Search Interest' ordinal='7' />
                  <column datatype='real' name='Dogecoin Volume' ordinal='8' />
                  <column datatype='real' name='Dogecoin Price' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Bitcoin'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Price of Bitcoin against Average Bitcoin Search Interest</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='All Data (set8)' name='federated.0edvvqa0ap074u1eynk511801dx0' />
          </datasources>
          <datasource-dependencies datasource='federated.0edvvqa0ap074u1eynk511801dx0'>
            <column datatype='real' name='[Bitcoin Price]' role='measure' type='quantitative' />
            <column datatype='real' name='[Bitcoin Search Interest]' role='measure' type='quantitative' />
            <column datatype='date' name='[Week]' role='dimension' type='ordinal' />
            <column-instance column='[Bitcoin Price]' derivation='Avg' name='[avg:Bitcoin Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bitcoin Search Interest]' derivation='Avg' name='[avg:Bitcoin Search Interest:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Week]' derivation='Year-Trunc' name='[tyr:Week:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0edvvqa0ap074u1eynk511801dx0].[avg:Bitcoin Search Interest:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0edvvqa0ap074u1eynk511801dx0].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0edvvqa0ap074u1eynk511801dx0].[avg:Bitcoin Price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0edvvqa0ap074u1eynk511801dx0].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0edvvqa0ap074u1eynk511801dx0].[avg:Bitcoin Search Interest:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0edvvqa0ap074u1eynk511801dx0].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0edvvqa0ap074u1eynk511801dx0].[avg:Bitcoin Price:qk] + [federated.0edvvqa0ap074u1eynk511801dx0].[avg:Bitcoin Search Interest:qk])</rows>
        <cols>[federated.0edvvqa0ap074u1eynk511801dx0].[tyr:Week:qk]</cols>
      </table>
      <simple-id uuid='{963C0B11-0928-424D-9012-A4646C908F0E}' />
    </worksheet>
    <worksheet name='Dogecoin'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Price of Dogecoin against Average Dogecoin Search Interest</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='All Data (set8)' name='federated.0edvvqa0ap074u1eynk511801dx0' />
          </datasources>
          <datasource-dependencies datasource='federated.0edvvqa0ap074u1eynk511801dx0'>
            <column datatype='real' name='[Dogecoin Price]' role='measure' type='quantitative' />
            <column datatype='real' name='[Dogecoin Search Interest]' role='measure' type='quantitative' />
            <column datatype='date' name='[Week]' role='dimension' type='ordinal' />
            <column-instance column='[Dogecoin Price]' derivation='Avg' name='[avg:Dogecoin Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dogecoin Search Interest]' derivation='Avg' name='[avg:Dogecoin Search Interest:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Week]' derivation='Year-Trunc' name='[tyr:Week:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0edvvqa0ap074u1eynk511801dx0].[avg:Dogecoin Search Interest:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0edvvqa0ap074u1eynk511801dx0].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0edvvqa0ap074u1eynk511801dx0].[avg:Dogecoin Price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0edvvqa0ap074u1eynk511801dx0].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0edvvqa0ap074u1eynk511801dx0].[avg:Dogecoin Search Interest:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0edvvqa0ap074u1eynk511801dx0].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0edvvqa0ap074u1eynk511801dx0].[avg:Dogecoin Price:qk] + [federated.0edvvqa0ap074u1eynk511801dx0].[avg:Dogecoin Search Interest:qk])</rows>
        <cols>[federated.0edvvqa0ap074u1eynk511801dx0].[tyr:Week:qk]</cols>
      </table>
      <simple-id uuid='{B784F71A-EBB4-4AB0-BD3C-0A1E751C6A26}' />
    </worksheet>
    <worksheet name='Ether'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Price of Ether against Average Ether Search Interest</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='All Data (set8)' name='federated.0edvvqa0ap074u1eynk511801dx0' />
          </datasources>
          <datasource-dependencies datasource='federated.0edvvqa0ap074u1eynk511801dx0'>
            <column datatype='real' name='[Ether Price]' role='measure' type='quantitative' />
            <column datatype='real' name='[Ether Search Interest]' role='measure' type='quantitative' />
            <column datatype='date' name='[Week]' role='dimension' type='ordinal' />
            <column-instance column='[Ether Price]' derivation='Avg' name='[avg:Ether Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ether Search Interest]' derivation='Avg' name='[avg:Ether Search Interest:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Week]' derivation='Year-Trunc' name='[tyr:Week:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0edvvqa0ap074u1eynk511801dx0].[avg:Ether Search Interest:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0edvvqa0ap074u1eynk511801dx0].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0edvvqa0ap074u1eynk511801dx0].[avg:Ether Price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0edvvqa0ap074u1eynk511801dx0].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0edvvqa0ap074u1eynk511801dx0].[avg:Ether Search Interest:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0edvvqa0ap074u1eynk511801dx0].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0edvvqa0ap074u1eynk511801dx0].[avg:Ether Price:qk] + [federated.0edvvqa0ap074u1eynk511801dx0].[avg:Ether Search Interest:qk])</rows>
        <cols>[federated.0edvvqa0ap074u1eynk511801dx0].[tyr:Week:qk]</cols>
      </table>
      <simple-id uuid='{47954360-8E7D-4B11-9EE0-E30E52479CDA}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Bitcoin'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0edvvqa0ap074u1eynk511801dx0].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0edvvqa0ap074u1eynk511801dx0].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4EA5BFA8-3EA5-4F45-8641-2D1CC9D8DED5}' />
    </window>
    <window class='worksheet' maximized='true' name='Ether'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0edvvqa0ap074u1eynk511801dx0].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0edvvqa0ap074u1eynk511801dx0].[tyr:Week:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0edvvqa0ap074u1eynk511801dx0].[avg:Ether Price:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0edvvqa0ap074u1eynk511801dx0].[avg:Ether Price:qk]</field>
                  <field>[federated.0edvvqa0ap074u1eynk511801dx0].[tyr:Week:qk]</field>
                  <field>[federated.0edvvqa0ap074u1eynk511801dx0].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>486.24079025857537</value>
                <value>#2018-01-01 00:00:00#</value>
                <value>&quot;[federated.0edvvqa0ap074u1eynk511801dx0].[avg:Ether Price:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0edvvqa0ap074u1eynk511801dx0].[yr:Week:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EF2C0634-FCF3-4B8A-B9C8-56572265C9C5}' />
    </window>
    <window class='worksheet' name='Dogecoin'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0edvvqa0ap074u1eynk511801dx0].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0edvvqa0ap074u1eynk511801dx0].[yr:Week:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{91BF6273-F1B2-4711-93E9-BA27070CFBA0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Bitcoin' width='384'>
      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
      AfoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Dogecoin' width='384'>
      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
      pFEsACIijfp/toiHxbuS5SoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Ether' width='384'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
